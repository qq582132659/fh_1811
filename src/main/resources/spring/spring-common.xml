<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">
		<!-- 扫描service层使其注解生效 -->
		<context:component-scan base-package="com.fh.shop.api.*.biz"/>
		<!-- 配置解析properties资源文件 -->
		<context:property-placeholder location="classpath:dataSource.properties,classpath:smsInfo.properties"/>
		<!-- 配置dbcp数据库连接池 -->
		<bean id = "dataSource" class = "org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="url"><value>${jdbc.url}</value></property>
			<property name="driverClassName"><value>${jdbc.driverClassName}</value></property>
			<property name="username"><value>${jdbc.username}</value></property>
			<property name="password"><value>${jdbc.password}</value></property>
			<property name="maxActive"><value>${jdbc.maxActive}</value></property>
			<property name="maxWait"><value>${jdbc.maxWait}</value></property>
		</bean>
		<!-- 配置sessionfactin -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 引用数据连接池 -->
			<property name="dataSource" ref="dataSource" />
			<!-- 自动扫描mapping.xml文件 -->
			<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
		</bean>
		<!-- 装配dao接口 通过MapperScannerConfigurer自动扫描basePackage中配置的所有接口 并且把sqlsession与接口结合-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fh.shop.api.*.mapper.**" /> <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!--声明事务管理 将数据库连接信息交给交给 springframework中的指定属性dataSource -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 配置事务的传播特性 把增删改进行事务控制 查询配置成只读事务-->
	<tx:advice id="a" transaction-manager="transactionManager"><!-- 配置事务管理器 -->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/><!-- 加入 rollback-for="Exception" 属性表示对所有异常都进行回滚-->
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="bacth*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="import*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" read-only="true"/>
			<!-- 如果不是以上三种，则配置成只读事务(如select)。只读事务可以提高性能，当更新某个对象时，将不会再做脏数据检查。(因为是只读的并不用更新，所以不用再作比较,判断是否读取到脏数据。) -->
		</tx:attributes>
	</tx:advice>
	<!-- .. 代表改包下任意嵌套层次的子包 切点表达式配置对scrive层所有方法进行事务控制 也就是业务逻辑层-->
	<aop:config>
		<aop:advisor pointcut="execution(* com.fh.shop.api.*.biz..*.*(..))" advice-ref="a"/>
	</aop:config>
</beans>  